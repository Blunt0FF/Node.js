// // –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Book`:

// // –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∫–Ω–∏–≥—É. –£ –∫–Ω–∏–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞:
// // `title` (—Å—Ç—Ä–æ–∫–∞) ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏.
// // `author` (—Å—Ç—Ä–æ–∫–∞) ‚Äî –∞–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏.
// // `yearPublished` (—á–∏—Å–ª–æ) ‚Äî –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è.
// // `isAvailable` (–±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ) ‚Äî –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –∫–Ω–∏–≥–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.

// // –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `printBookInfo`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ `Book` –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

// // –ù–∞–∑–≤–∞–Ω–∏–µ: <title>
// // –ê–≤—Ç–æ—Ä: <author>
// // –ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è: <yearPublished>
// // –î–æ—Å—Ç—É–ø–Ω–∞: <isAvailable
// // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π:

// // –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `printBookInfo` –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∫–Ω–∏–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.

// // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:

// // ¬†¬†¬†¬†{ title: "1984", author: "George Orwell", yearPublished: 1949, isAvailable: true },
// // ¬†¬†¬†¬†{ title: "To Kill a Mockingbird", author: "Harper Lee", yearPublished: 1960, isAvailable: false },
// // ¬†¬†¬†¬†{ title: "The Great Gatsby", author: "F. Scott Fitzgerald", yearPublished: 1925, isAvailable: true }

// // interface IBook {
// //     title: string,
// //     author: string,
// //     yearPublished: number,
// //     isAvailable: boolean
// // }

// // const book: IBook = {
// //     title: "Generation P",
// //     author: "V Pelevin",
// //     yearPublished: 2002,
// //     isAvailable: true
// // }


// // const booksList: IBook[] = [{
// //     title: "Generation P",
// //     author: "V Pelevin",
// //     yearPublished: 2002,
// //     isAvailable: true
// // },
// // {
// //     title: "Generation P",
// //     author: "V Pelevin",
// //     yearPublished: 2002,
// //     isAvailable: true
// // },
// // {
// //     title: "Generation P",
// //     author: "V Pelevin",
// //     yearPublished: 2002,
// //     isAvailable: true
// // }]

// // function printBookInfo(books: IBook[]): void {
// //     books.forEach((item:IBook)=> {
// //         console.log(`Title: ${item.title}`);
// //         console.log(`Author: ${item.author}`);
// //         console.log(`yearPublished: ${item.yearPublished}`);

// //     })
// // }

// // printBookInfo(booksList)


// // –ó–∞–¥–∞–Ω–∏–µ 2

// // –ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö

// // –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `division`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —á–∞—Å—Ç–Ω–æ–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–≥—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é.

// // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TypeScript, —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å `tsconfig.json`.

// // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TypeScript –≥–ª–æ–±–∞–ª—å–Ω–æ —Å –ø–æ–º–æ—â—å—é `npm install -g typescript`.

// // –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π `npm` —Å –∫–æ–º–∞–Ω–¥–æ–π `npm init -y`.

// // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ `typescript` –∏ `ts-node` –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

// // –ù–∞—Å—Ç—Ä–æ–π—Ç–µ `tsconfig.json` —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

// // –ó–∞–¥–∞–Ω–∏–µ 2

// // –ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö

// // –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `division`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —á–∞—Å—Ç–Ω–æ–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–≥—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é.

// –ó–∞–¥–∞–Ω–∏–µ 3

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤

// –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Car`, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å –ø–æ–ª—è–º–∏ `make`, `model`, `year`, –∏ `isElectric`.
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ `Car` –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.

function division(a: number, b: number): number {
    return a / b;
}

console.log(division(10, 0));

interface Car {
    brand: string;
    model: string;
    year: number;
    isElectric: boolean;
}

function printCarInfo(car: Car): void {
    console.log(`–ú–∞—Ä–∫–∞: ${car.brand}`);
    console.log(`–ú–æ–¥–µ–ª—å: ${car.model}`);
    console.log(`–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ${car.year}`);
    console.log(`–≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å: ${car.isElectric ? '–î–∞' : '–ù–µ—Ç'}`);
}

const myCar: Car = {
    brand: 'Tesla',
    model: 'Model 3',
    year: 2022,
    isElectric: true,
};

printCarInfo(myCar);

// –ó–∞–¥–∞–Ω–∏–µ 4

// –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –∏ —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π

// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `calculateSum`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É. –î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–≥—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é.
// –†–µ—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ reduce

function calculateSum(numbers: number[]): number {
    return numbers.reduce((sum, current) => sum + current, 0);
}

const nums: number[] = [228, 14, 88, 10000];

console.log(`–°—É–º–º–∞ —á–∏—Å–µ–ª: ${calculateSum(nums)}`)

// –ó–∞–¥–∞–Ω–∏–µ 5

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `isAdult`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`, –µ—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç 18 –∏ –±–æ–ª—å—à–µ, –∏ `false` –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–≥—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é.

function isAdult(age: number): boolean {
    return age >= 18;
}

console.log(isAdult(20));
console.log(isAdult(16));

// –ó–∞–¥–∞–Ω–∏–µ 6

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏

// –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Task`, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á—É —Å –ø–æ–ª—è–º–∏ `title`, `description` –∏ `isCompleted`.

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á –∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.

// –û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∑–∞–¥–∞—á–∏
interface Task {
    title: string;
    description: string;
    isCompleted: boolean;
}

// –§—É–Ω–∫—Ü–∏—è, —Ñ–∏–ª—å—Ç—Ä—É—é—â–∞—è –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
function showIncompleteTasks(tasks: Task[]): void {
    const incompleteTasks = tasks.filter(task => !task.isCompleted);
    incompleteTasks.forEach(task => {
        console.log(`üîπ ${task.title}: ${task.description}`);
    });
}

// –ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—á
const tasks: Task[] = [
    { title: "–°–¥–µ–ª–∞—Ç—å –î–ó", description: "–ü–æ TypeScript", isCompleted: false },
    { title: "–ü–æ–º—ã—Ç—å –ø–æ—Å—É–¥—É", description: "–ü–æ—Å–ª–µ —É–∂–∏–Ω–∞", isCompleted: true },
    { title: "–ü—Ä–æ–±–µ–∂–∫–∞", description: "5 –∫–º —É—Ç—Ä–æ–º", isCompleted: false },
];

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
showIncompleteTasks(tasks);

//   –ó–∞–¥–∞–Ω–∏–µ 7

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `greet`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è (—Å—Ç—Ä–æ–∫–∞) –∏ –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ).¬†

// –í—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–º.

function greet(name: string, age: number): void {
    console.log(`–ü—Ä–∏–≤–µ—Ç, ${name}! –¢–µ–±–µ ${age} –ª–µ—Ç.`);
}

// –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞
greet("–ö–∏—Ä–∏–ª–ª", 228);